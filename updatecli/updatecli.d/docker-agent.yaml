---
name: Bump the parent image `jenkins/agent` version

scms:
  default:
    kind: github
    spec:
      user: "{{ .github.user }}"
      email: "{{ .github.email }}"
      owner: "{{ .github.owner }}"
      repository: "{{ .github.repository }}"
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
      branch: "{{ .github.branch }}"

sources:
  lastVersion:
    kind: githubrelease
    name: Get the latest version of the parent image `jenkins/agent`
    spec:
      owner: jenkinsci
      repository: docker-agent
      token: "{{ requiredEnv .github.token }}"
      username: "{{ .github.username }}"
      versionfilter:
        kind: latest

conditions:
  checkJdk11AlpineDockerImage:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-alpine-jdk11" for linux/amd64 is available
    disablesourceinput: true
    spec:
      architecture: amd64
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-alpine-jdk11'
  checkJdk17AlpineDockerImage:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-alpine-jdk17" for linux/amd64 is available
    disablesourceinput: true
    spec:
      architecture: amd64
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-alpine-jdk17'
  checkJdk11DebianDockerImages:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-jdk11" for linux/amd64 is available
    disablesourceinput: true
    spec:
      architectures:
        - amd64
        - arm64
        - arm/v7
        - s390x
        - ppc64le
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-jdk11'
  checkJdk17DebianDockerImages:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-jdk17" for linux/amd64 is available
    disablesourceinput: true
    spec:
      architectures:
        - amd64
        - arm64
        - arm/v7
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-jdk17'
  checkJdk11WindowsNanoserver1809DockerImage:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-jdk11-nanoserver-1809" for windows/amd64 is available
    disablesourceinput: true
    spec:
      architecture: amd64
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-jdk11-nanoserver-1809'
  checkJdk17WindowsNanoserver1809DockerImage:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-jdk17-nanoserver-1809" for windows/amd64 is available
    disablesourceinput: true
    spec:
      architecture: amd64
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-jdk17-nanoserver-1809'
  checkJdk11WindowsServer2019DockerImage:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-jdk11-windowsservercore-ltsc2019" for windows/amd64 is available
    disablesourceinput: true
    spec:
      architecture: amd64
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-jdk11-windowsservercore-ltsc2019'
  checkJdk17WindowsServer2019DockerImage:
    kind: dockerimage
    name: Check if the container image "jenkins/agent:<lastVersion>-jdk17-windowsservercore-ltsc2019" for windows/amd64 is available
    disablesourceinput: true
    spec:
      architecture: amd64
      image: jenkins/agent
      tag: '{{source "lastVersion" }}-jdk17-windowsservercore-ltsc2019'

targets:
  setJdk11AlpineDockerImage:
    name: Bump the parent image `jenkins/agent` version on JDK11 Alpine
    kind: dockerfile
    spec:
      file: linux/Dockerfile.alpine
      instruction:
        keyword: ARG
        matcher: version
    scmid: default
  setJdk11DebianDockerImage:
    name: Bump the parent image `jenkins/agent` version on JDK11 Debian
    kind: dockerfile
    spec:
      file: linux/Dockerfile.debian
      instruction:
        keyword: ARG
        matcher: version
    scmid: default
  setJdk11WindowsNanoserver1809DockerImage:
    name: Bump the parent image `jenkins/agent` version on JDK11 Windows Nanoserver 1809
    kind: dockerfile
    spec:
      file: windows/Dockerfile.nanoserver
      instruction:
        keyword: ARG
        matcher: version
    scmid: default
  setJdk11WindowsServer2019DockerImage:
    name: Bump the parent image `jenkins/agent` version on JDK11 Windows Server 2019
    kind: dockerfile
    spec:
      file: windows/windowsservercore
      instruction:
        keyword: ARG
        matcher: version
    scmid: default
  setJdk17AlpineDockerImage:
    name: Bump the parent image `jenkins/agent` version on JDK17 Alpine
    kind: dockerfile
    spec:
      file: linux/Dockerfile.alpine
      instruction:
        keyword: ARG
        matcher: version
    scmid: default
  setJdk17DebianDockerImage:
    name: Bump the parent image `jenkins/agent` version on JDK17 Debian
    kind: dockerfile
    spec:
      file: linux/Dockerfile.debian
      instruction:
        keyword: ARG
        matcher: version
    scmid: default
  setJdk17WindowsNanoserver1809DockerImage:
    name: Bump the parent image `jenkins/agent` version on JDK17 Windows Nanoserver 1809
    kind: dockerfile
    spec:
      file: windows/windowsservercore
      instruction:
        keyword: ARG
        matcher: version
    scmid: default
  setJdk17WindowsServer2019DockerImage:
    name: Bump the parent image `jenkins/agent` version on JDK17 Windows Server 2019
    kind: dockerfile
    spec:
      file: windows/windowsservercore-ltsc2019/Dockerfile
      instruction:
        keyword: ARG
        matcher: version
    scmid: default
  setDockerBakeDefaultParentImage:
    name: Bump the parent image `jenkins/agent` version on the docker-bake.hcl file
    kind: file
    spec:
      file: docker-bake.hcl
      matchpattern: >-
        variable(.*)"DOCKER_AGENT_VERSION"(.*){(.*)(\r\n|\r|\n)(.*)default(.*)=(.*)
      replacepattern: >-
        variable${1}"DOCKER_AGENT_VERSION"${2}{${3}${4}${5}default${6}= "{{ source "lastVersion" }}"
    scmid: default
  setWindowsMakePwshParentImage:
    name: Bump the parent image `jenkins/agent` version on the windows make.ps1 file
    kind: file
    spec:
      file: make.ps1
      matchpattern: >-
        \$DockerAgentVersion(.*)=(.*),
      replacepattern: >-
        $$DockerAgentVersion${1}= '{{ source "lastVersion" }}',
    scmid: default

actions:
  default:
    kind: github/pullrequest
    scmid: default
    title: Bump the parent image `jenkins/agent` version to {{ source "lastVersion" }}
    spec:
      labels:
        - dependencies
        - jenkins/agent
